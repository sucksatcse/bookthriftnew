// Home.js
import React, { useEffect, useState } from 'react';
import styles from './Home.module.css';
import { useNavigate, useLocation } from 'react-router-dom';
import axios from 'axios';
import BookCard from '../../components/BookCard/BookCard';
import FeatureCard from '../../components/FeatureCard/FeatureCard';
import TestimonialCard from '../../components/TestimonialCard/TestimonialCard';
import { FaBook, FaMoneyBill, FaBell, FaTruck } from 'react-icons/fa';
import { toast } from 'react-toastify';

function Home() {
  const navigate = useNavigate();
  const location = useLocation();
  const [featuredBooks, setFeaturedBooks] = useState([]);
  const [loading, setLoading] = useState(true);

  // тЬЕ Show login message toast
  useEffect(() => {
    if (location.state?.msg) {
      toast.info(location.state.msg, { autoClose: 3000 });
    }
  }, [location]);

  // тЬЕ Load books on mount
  useEffect(() => {
    axios.get('http://localhost:5000/api/books')
      .then((res) => {
        setFeaturedBooks(res.data.slice(0, 4)); // show first 4
        setLoading(false);
      })
      .catch((err) => {
        console.error("Error fetching featured books:", err);
        setLoading(false);
      });
  }, []);

  return (
    <div className={styles.homePage}>
      {/* Hero Section */}
      <section className={styles.hero}>
        <div className={styles.heroContent}>
          <h1>ржЖржкржирж╛рж░ ржкржЫржирзНржжрзЗрж░ ржмржЗ ржЦрзБржБржЬрзБржи</h1>
          <p>ржмрж╛ржВрж▓рж╛ рж╕рж╛рж╣рж┐рждрзНржпрзЗрж░ рж╕рзЗрж░рж╛ ржмржЗржЧрзБрж▓рж┐рж░ рж╕ржВржЧрзНрж░рж╣</p>
          <button
            className={styles.ctaButton}
            onClick={() => navigate('/product-list')}
          >
            ржПржЦржиржЗ ржмрзНрж░рж╛ржЙржЬ ржХрж░рзБржи
          </button>
        </div>
      </section>

      {/* Features Section */}
      <section className={styles.features}>
        <h2>ржЖржорж╛ржжрзЗрж░ рж╕рзЗржмрж╛рж╕ржорзВрж╣</h2>
        <div className={styles.featureGrid}>
          <FeatureCard icon={<FaBook />} title="ржмрж╛ржЫрж╛ржЗржХрзГржд ржмржЗ" description="рж╕рзЗрж░рж╛ ржмрж╛ржВрж▓рж╛ ржмржЗржпрж╝рзЗрж░ рж╕ржВржЧрзНрж░рж╣" />
          <FeatureCard icon={<FaMoneyBill />} title="ржХрзНрж░ржпрж╝/ржмрж┐ржХрзНрж░ржпрж╝/ржмрж┐ржирж┐ржоржпрж╝" description="ржмржЗ ржХрзНрж░ржпрж╝, ржмрж┐ржХрзНрж░ржпрж╝ ржмрж╛ ржмрж┐ржирж┐ржоржпрж╝ ржХрж░рзБржи" />
          <FeatureCard icon={<FaBell />} title="ржирзЛржЯрж┐ржлрж┐ржХрзЗрж╢ржи" description="ржкржЫржирзНржжрзЗрж░ ржмржЗржпрж╝рзЗрж░ ржЖржкржбрзЗржЯ ржкрж╛ржи" />
          <FeatureCard icon={<FaTruck />} title="ржжрзНрж░рзБржд ржбрзЗрж▓рж┐ржнрж╛рж░рж┐" description="рж╕рж╛рж░рж╛ ржжрзЗрж╢рзЗ ржбрзЗрж▓рж┐ржнрж╛рж░рж┐" />
        </div>
      </section>

      {/* Featured Books */}
      <section className={styles.featuredBooks}>
        <h2>ржЬржиржкрзНрж░рж┐ржпрж╝ ржмржЗрж╕ржорзВрж╣</h2>
        <div className={styles.bookGrid}>
          {loading ? (
            <p>ЁЯУж рж▓рзЛржб рж╣ржЪрзНржЫрзЗ...</p>
          ) : featuredBooks.length === 0 ? (
            <p>тЭМ ржХрзЛржирзЛ ржмржЗ ржкрж╛ржУржпрж╝рж╛ ржпрж╛ржпрж╝ржирж┐ред</p>
          ) : (
            featuredBooks.map((book) => (
              <BookCard key={book._id} book={book} />
            ))
          )}
        </div>
      </section>

      {/* Testimonials */}
      <section className={styles.testimonials}>
        <h2>ржЧрзНрж░рж╛рж╣ржХржжрзЗрж░ ржорждрж╛ржоржд</h2>
        <div className={styles.testimonialGrid}>
          <TestimonialCard text="ржЕрж╕рж╛ржзрж╛рж░ржг ржмржЗржпрж╝рзЗрж░ рж╕ржВржЧрзНрж░рж╣ ржПржмржВ ржжрзНрж░рзБржд ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ рж╕рзЗржмрж╛!" customer="рж░рж╣рж┐ржорж╛ ржЖржХрзНрждрж╛рж░" />
          <TestimonialCard text="ржкрзБрж░рж╛рждржи ржмржЗ ржмрж┐ржирж┐ржоржпрж╝рзЗрж░ рж╕рзБржмрж┐ржзрж╛ ржЦрзБржмржЗ ржнрж╛рж▓рзЛ ржзрж╛рж░ржгрж╛ред" customer="ржХрж░рж┐ржо ржЙржжрзНржжрж┐ржи" />
        </div>
      </section>
    </div>
  );
}

export default Home;